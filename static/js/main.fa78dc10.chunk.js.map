{"version":3,"sources":["page/components/search.tsx","page/components/users_list.tsx","page/components/user_details.tsx","page/githab_page.tsx","App.tsx","index.js"],"names":["Search","props","useState","term","setTerm","placeholder","className","value","onChange","e","currentTarget","onClick","onSubmit","UsersList","selectedUser","setSelectedUser","users","setUsers","useEffect","axios","get","then","res","data","items","document","title","map","user","login","SelectedUser","id","UserDetailts","userDetails","setUserDetails","console","log","selected","src","avatar_url","alt","public_repos","followers","bio","created_at","GitHabPage","fixedTerm","setFixedTerm","setSelected","App","ReactDOM","render","getElementById"],"mappings":"8SAQaA,EAAoC,SAACC,GAE9C,MAAwBC,mBAAiB,gBAAzC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OAAO,gCACH,uBAAOC,YAAY,oBAAoBC,UAAU,QAC7CC,MAAOJ,EACPK,SAAU,SAACC,GACPL,EAAQK,EAAEC,cAAcH,UAEhC,wBAAQD,UAAU,SAClBK,QAAS,WACPV,EAAMW,SAAST,IAFjB,wB,gBCEKU,G,MAAY,SAACZ,GAEtB,MAAwCC,mBAAwB,MAAhE,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAA0Bb,mBAA4B,IAAtD,mBAAOc,EAAP,KAAcC,EAAd,KAgBA,OAdAC,qBAAU,WACNC,IACKC,IAAkB,yCAA0CnB,EAAME,MAAMkB,MAChE,SAAAC,GACIL,EAASK,EAAIC,KAAKC,YAErC,CAACvB,EAAME,OAETe,qBAAU,WACDJ,IACDW,SAASC,MAAQZ,KAEvB,CAACA,IAEI,qBAAKR,UAAU,OAAf,SAEHU,GAASA,EAAMW,KAAI,SAACC,GACZ,OAAO,8BACL,oBACAjB,QAAW,WACPI,EAAgBa,EAAKC,OACrB5B,EAAM6B,aAAaF,EAAKC,QAE5BvB,UAAWQ,IAAiBc,EAAKC,MAAQ,WAAa,GALtD,SAMKD,EAAKC,SAPOD,EAAKG,WC1B3BC,G,MAAe,SAAC/B,GAEzB,MAAsCC,qBAAtC,mBAAO+B,EAAP,KAAoBC,EAApB,KAaA,OAXAhB,qBAAU,WACNiB,QAAQC,IAAInC,EAAMoC,UACbpC,EAAMoC,UACPlB,IACCC,IADD,uCACsDnB,EAAMoC,WAC3DhB,MAAK,SAAAC,GACFY,EAAeZ,EAAIC,WAG5B,CAACtB,EAAMoC,WAEH,8BACHJ,GAAe,sBAAM3B,UAAU,gBAAhB,UACX,8BACI,qBAAKgC,IAAG,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAaM,WAAYC,IAAI,aAAalC,UAAU,aAEnE,sBAAKA,UAAU,qBAAf,UACI,oCAAK2B,QAAL,IAAKA,OAAL,EAAKA,EAAaJ,QAClB,0PAA4CI,QAA5C,IAA4CA,OAA5C,EAA4CA,EAAaQ,gBACzD,yJAA2BR,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAaS,aACxCT,EAAYU,KAAO,2FAAiBV,EAAYU,OAChD,sKAA8BV,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAaW,wBCjC9CC,G,MAAa,WAEtB,MAAkC3C,mBAAiB,gBAAnD,mBAAO4C,EAAP,KAAkBC,EAAlB,KACA,EAAgC7C,mBAAiB,IAAjD,mBAAOmC,EAAP,KAAiBW,EAAjB,KAEA,OAAO,sBAAK1C,UAAU,OAAf,UACH,gCACI,cAAC,EAAD,CAASM,SAAW,SAACL,GAAWwC,EAAaxC,MAC7C,cAAC,EAAD,CAAWJ,KAAM2C,EAAWhB,aAAgB,SAACvB,GAAkByC,EAAYzC,SAE/E,8BACI,cAAC,EAAD,CAAe8B,SAAUA,WCXtBY,MANf,WACE,OAAO,mCACH,cAAC,EAAD,OCANC,IAASC,OACL,cAAC,EAAD,IACF1B,SAAS2B,eAAe,W","file":"static/js/main.fa78dc10.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport '../../style/search.css'\r\n\r\ntype SearchPropsType ={\r\n    onSubmit: (value: string) => void\r\n}\r\n\r\nexport const Search: React.FC<SearchPropsType> = (props)=>{\r\n\r\n    const [term, setTerm] = useState<string>('it-kamasutra')\r\n\r\n\r\n    return <div>\r\n        <input placeholder='edit search value' className='input'\r\n            value={term} \r\n            onChange={(e) =>{\r\n                setTerm(e.currentTarget.value)\r\n        }}/>\r\n        <button className='button'\r\n        onClick={()=>{\r\n          props.onSubmit(term)\r\n        }}>Search</button>\r\n    </div>\r\n}","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nimport '../../style/users_list.css'\r\n\r\n\r\ntype PropsType = {\r\n    term: string,\r\n    SelectedUser: (login: string) => void\r\n}\r\n\r\ntype UsersSearchType={\r\n    login: string,\r\n    id: number\r\n}\r\n\r\ntype SearchResult = {\r\n    items: UsersSearchType[]\r\n}\r\n\r\nexport const UsersList = (props: PropsType) =>{\r\n\r\n    const [selectedUser, setSelectedUser] = useState<string | null>(null);\r\n    const [users, setUsers] = useState<UsersSearchType[]>([]);\r\n\r\n    useEffect(()=>{\r\n        axios.\r\n             get<SearchResult>('https://api.github.com/search/users?q='+ props.term).then(\r\n                     res =>{\r\n                         setUsers(res.data.items)}\r\n                 )\r\n    },[props.term])\r\n\r\n    useEffect(()=>{\r\n        if(!!selectedUser){\r\n            document.title = selectedUser;\r\n        }\r\n    },[selectedUser])\r\n\r\n    return <div className='list'>\r\n        {\r\n        users && users.map((user) =>{\r\n                return <div key = {user.id}>\r\n                  <li \r\n                  onClick = {()=>{\r\n                      setSelectedUser(user.login)\r\n                      props.SelectedUser(user.login)\r\n                }}\r\n                  className={selectedUser === user.login ? 'selected' : ''}>\r\n                      {user.login}\r\n                  </li>\r\n                </div>\r\n            })\r\n        }\r\n    </div>\r\n}","import axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport Avatar from '../../image/avatar.jpg'\r\nimport '../../style/user_details.css'\r\n\r\ntype PropsType = {\r\n    selected: string\r\n}\r\ntype UserDetailsType={\r\n    login: string,\r\n    id: number,\r\n    avatar_url: string,\r\n    public_repos: string,\r\n    bio: string,\r\n    followers: number,\r\n    created_at: string\r\n}\r\nexport const UserDetailts = (props: PropsType)=>{\r\n\r\n    const [userDetails, setUserDetails] = useState< null | UserDetailsType>();\r\n\r\n    useEffect(()=>{\r\n        console.log(props.selected)\r\n        if(!!props.selected){\r\n            axios\r\n            .get<UserDetailsType>(`https://api.github.com/users/${props.selected}`)\r\n            .then(res =>{\r\n                setUserDetails(res.data)\r\n            })\r\n        }\r\n    }, [props.selected])\r\n\r\n    return <div>\r\n       {userDetails && <div  className='details_block'>\r\n            <div>\r\n                <img src= {userDetails?.avatar_url} alt='User Photo' className='avatar'/>\r\n            </div>\r\n            <div className='details_info_block'>\r\n                <h3>{userDetails?.login}</h3>\r\n                <div>Кількість опублікованих репозиторіїв: {userDetails?.public_repos}</div>\r\n                <div>Кількість фоловерів: {userDetails?.followers}</div>\r\n               {userDetails.bio && <div>Біографія: {userDetails.bio}</div>}\r\n                <div>Дата створення акаунту: {userDetails?.created_at}</div>\r\n            </div>\r\n        </div>   \r\n        }   \r\n    </div>\r\n}","import { useState } from 'react'\r\nimport { Search } from './components/search'\r\nimport { UsersList } from './components/users_list'\r\nimport { UserDetailts } from './components/user_details'\r\n\r\nimport '../style/githab_page.css'\r\n\r\n\r\n\r\nexport const GitHabPage = () =>{\r\n\r\n    const [fixedTerm, setFixedTerm] = useState<string>('it-kamasutra');\r\n    const [selected, setSelected] = useState<string>('');\r\n   \r\n    return <div className='page'>\r\n        <div>\r\n            <Search  onSubmit ={(value) => {setFixedTerm(value)}}/>\r\n            <UsersList term={fixedTerm} SelectedUser = {(value: string) =>{setSelected(value)}}/>\r\n        </div>\r\n        <div>\r\n            <UserDetailts  selected={selected}/>\r\n        </div>\r\n    </div>\r\n}","import './App.css';\nimport { GitHabPage } from './page/githab_page';\n\nfunction App() {\n  return <>\n      <GitHabPage />\n    </>\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />, \n  document.getElementById('root')\n);\n"],"sourceRoot":""}